// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CardTaskDetails Should render correctly even if the current task is undefined 1`] = `
<CardTaskDetails
  changeCurrentTask={[MockFunction]}
  equipment={
    Object {
      "_id": "1234",
      "age": 2563,
      "brand": "nanni",
      "installation": 2011-02-22T16:00:00.000Z,
      "model": "N3.30",
      "name": "engine",
    }
  }
  onTaskChanged={[MockFunction]}
  onTaskDeleted={[MockFunction]}
  tasks={
    Array [
      Object {
        "_id": "task1",
        "description": "task1 description",
        "level": 1,
        "name": "taskname1",
        "nextDueDate": 2011-02-22T16:00:00.000Z,
        "periodInMonth": 12,
        "usageInHourLeft": 20,
        "usagePeriodInHour": 200,
      },
      Object {
        "_id": "task2",
        "description": "task2 description",
        "level": 3,
        "name": "taskname2",
        "nextDueDate": 2018-02-22T16:00:00.000Z,
        "periodInMonth": 24,
        "usageInHourLeft": 20,
        "usagePeriodInHour": 400,
      },
    ]
  }
>
  <div
    className="card"
  />
</CardTaskDetails>
`;

exports[`CardTaskDetails Should render correctly even if the equipment is undefined 1`] = `
<CardTaskDetails
  changeCurrentTask={[MockFunction]}
  onTaskChanged={[MockFunction]}
  onTaskDeleted={[MockFunction]}
  tasks={Array []}
>
  <div
    className="card"
  />
</CardTaskDetails>
`;

exports[`CardTaskDetails Should render correctly even if the task array is empty 1`] = `
<CardTaskDetails
  changeCurrentTask={[MockFunction]}
  equipment={
    Object {
      "_id": "1234",
      "age": 2563,
      "brand": "nanni",
      "installation": 2011-02-22T16:00:00.000Z,
      "model": "N3.30",
      "name": "engine",
    }
  }
  onTaskChanged={[MockFunction]}
  onTaskDeleted={[MockFunction]}
  tasks={Array []}
>
  <div
    className="card"
  />
</CardTaskDetails>
`;

exports[`CardTaskDetails should stay the same with task1 1`] = `
<div
  className="card"
>
  <div
    className="d-flex p-0 card-body"
  >
    <div
      className="p-2 button-previous-task"
      onClick={[Function]}
      style={
        Object {
          "cursor": "pointer",
        }
      }
    >
      <div
        className="card-control-prev-icon invisible"
      />
    </div>
    <div
      className="p-2 flex-grow-1"
    >
      <div>
        <div
          className="card-title"
        >
          taskname1
           
          <span
            className="badge badge-success badge-pill"
          >
            Done
          </span>
        </div>
        <div
          className="card-subtitle"
        >
          <span>
            <span>
              To do every 
            </span>
            <b>
              200
               h
               
            </b>
            <span>
               or every 
            </span>
            <b>
              <span>
                12 months
              </span>
            </b>
          </span>
        </div>
        <p
          className="card-text"
          dangerouslySetInnerHTML={
            Object {
              "__html": "task1 description",
            }
          }
        />
      </div>
    </div>
    <div
      className="p-2 button-next-task"
      onClick={[Function]}
      style={
        Object {
          "cursor": "pointer",
        }
      }
    >
      <div
        className="card-control-next-icon"
      />
    </div>
  </div>
  <div
    className="pl-5 pr-5 card-footer"
  >
    <button
      aria-label={null}
      className="float-left btn btn-light"
      onClick={[Function]}
      type="button"
    >
      <svg
        aria-hidden="true"
        className="svg-inline--fa fa-edit fa-w-18 "
        data-icon="edit"
        data-prefix="fas"
        focusable="false"
        role="img"
        style={Object {}}
        viewBox="0 0 576 512"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M402.6 83.2l90.2 90.2c3.8 3.8 3.8 10 0 13.8L274.4 405.6l-92.8 10.3c-12.4 1.4-22.9-9.1-21.5-21.5l10.3-92.8L388.8 83.2c3.8-3.8 10-3.8 13.8 0zm162-22.9l-48.8-48.8c-15.2-15.2-39.9-15.2-55.2 0l-35.4 35.4c-3.8 3.8-3.8 10 0 13.8l90.2 90.2c3.8 3.8 10 3.8 13.8 0l35.4-35.4c15.2-15.3 15.2-40 0-55.2zM384 346.2V448H64V128h229.8c3.2 0 6.2-1.3 8.5-3.5l40-40c7.6-7.6 2.2-20.5-8.5-20.5H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V306.2c0-10.7-12.9-16-20.5-8.5l-40 40c-2.2 2.3-3.5 5.3-3.5 8.5z"
          fill="currentColor"
          style={Object {}}
        />
      </svg>
    </button>
  </div>
</div>
`;

exports[`CardTaskDetails should stay the same with task2 1`] = `
<div
  className="card"
>
  <div
    className="d-flex p-0 card-body"
  >
    <div
      className="p-2 button-previous-task"
      onClick={[Function]}
      style={
        Object {
          "cursor": "pointer",
        }
      }
    >
      <div
        className="card-control-prev-icon"
      />
    </div>
    <div
      className="p-2 flex-grow-1"
    >
      <div>
        <div
          className="card-title"
        >
          taskname2
           
          <span
            className="badge badge-danger badge-pill"
          >
            ToDo
          </span>
        </div>
        <div
          className="card-subtitle"
        >
          <span>
            <span>
              To do every 
            </span>
            <b>
              400
               h
               
            </b>
            <span>
               or every 
            </span>
            <b>
              <span>
                24 months
              </span>
            </b>
          </span>
        </div>
        <p
          className="card-text"
          dangerouslySetInnerHTML={
            Object {
              "__html": "task2 description",
            }
          }
        />
      </div>
    </div>
    <div
      className="p-2 button-next-task"
      onClick={[Function]}
      style={
        Object {
          "cursor": "pointer",
        }
      }
    >
      <div
        className="card-control-next-icon invisible"
      />
    </div>
  </div>
  <div
    className="pl-5 pr-5 card-footer"
  >
    <button
      aria-label={null}
      className="float-left btn btn-light"
      onClick={[Function]}
      type="button"
    >
      <svg
        aria-hidden="true"
        className="svg-inline--fa fa-edit fa-w-18 "
        data-icon="edit"
        data-prefix="fas"
        focusable="false"
        role="img"
        style={Object {}}
        viewBox="0 0 576 512"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M402.6 83.2l90.2 90.2c3.8 3.8 3.8 10 0 13.8L274.4 405.6l-92.8 10.3c-12.4 1.4-22.9-9.1-21.5-21.5l10.3-92.8L388.8 83.2c3.8-3.8 10-3.8 13.8 0zm162-22.9l-48.8-48.8c-15.2-15.2-39.9-15.2-55.2 0l-35.4 35.4c-3.8 3.8-3.8 10 0 13.8l90.2 90.2c3.8 3.8 10 3.8 13.8 0l35.4-35.4c15.2-15.3 15.2-40 0-55.2zM384 346.2V448H64V128h229.8c3.2 0 6.2-1.3 8.5-3.5l40-40c7.6-7.6 2.2-20.5-8.5-20.5H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V306.2c0-10.7-12.9-16-20.5-8.5l-40 40c-2.2 2.3-3.5 5.3-3.5 8.5z"
          fill="currentColor"
          style={Object {}}
        />
      </svg>
    </button>
  </div>
</div>
`;
