// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component NavBar should render the navbar even when the user is still undefined 1`] = `
<IntlProvider
  defaultFormats={Object {}}
  defaultLocale="en"
  formats={Object {}}
  locale="en-US"
  messages={Object {}}
  onError={[Function]}
  textComponent={Symbol(react.fragment)}
>
  <Memo(NavBar)
    onLoggedOut={[MockFunction]}
  >
    <Navbar
      color="dark"
      dark={true}
      expand="md"
      tag="nav"
    >
      <nav
        className="navbar navbar-expand-md navbar-dark bg-dark"
      >
        <NavbarBrand
          href="/"
          tag="a"
        >
          <a
            className="navbar-brand"
            href="/"
          >
            <div
              className="mr-2"
            >
              Equipment maintenance
            </div>
            <div
              className="clock"
            >
              <FormattedMessage
                defaultMessage="Today, "
                id="today"
                values={Object {}}
              >
                Today, 
              </FormattedMessage>
              <ClockLabel>
                <span>
                  <FormattedDate
                    value={2019-11-26T23:54:00.000Z}
                  >
                    11/27/2019
                  </FormattedDate>
                  <span>
                     
                  </span>
                  <FormattedTime
                    hour="numeric"
                    minute="numeric"
                    second="numeric"
                    value={2019-11-26T23:54:00.000Z}
                  >
                    7:54:00 AM
                  </FormattedTime>
                </span>
              </ClockLabel>
            </div>
          </a>
        </NavbarBrand>
        <NavbarToggler
          onClick={[Function]}
          tag="button"
          type="button"
        >
          <button
            aria-label="Toggle navigation"
            className="navbar-toggler"
            onClick={[Function]}
            type="button"
          >
            <span
              className="navbar-toggler-icon"
            />
          </button>
        </NavbarToggler>
        <Collapse
          appear={false}
          enter={true}
          exit={true}
          in={false}
          isOpen={false}
          mountOnEnter={false}
          navbar={true}
          onEnter={[Function]}
          onEntered={[Function]}
          onEntering={[Function]}
          onExit={[Function]}
          onExited={[Function]}
          onExiting={[Function]}
          tag="div"
          timeout={350}
          unmountOnExit={false}
        >
          <Transition
            appear={false}
            enter={true}
            exit={true}
            in={false}
            mountOnEnter={false}
            onEnter={[Function]}
            onEntered={[Function]}
            onEntering={[Function]}
            onExit={[Function]}
            onExited={[Function]}
            onExiting={[Function]}
            timeout={350}
            unmountOnExit={false}
          >
            <div
              aria-expanded="false"
              className="collapse navbar-collapse"
              style={Object {}}
            >
              <Nav
                className="ml-auto"
                navbar={true}
                tag="ul"
                vertical={false}
              >
                <ul
                  className="ml-auto navbar-nav"
                >
                  <UncontrolledDropdown
                    inNavbar={true}
                    nav={true}
                  >
                    <Dropdown
                      a11y={true}
                      active={false}
                      addonType={false}
                      direction="down"
                      inNavbar={true}
                      isOpen={false}
                      nav={true}
                      setActiveFromChild={false}
                      toggle={[Function]}
                    >
                      <Manager>
                        <li
                          className="dropdown nav-item"
                          onKeyDown={[Function]}
                        >
                          <DropdownToggle
                            aria-haspopup={true}
                            caret={true}
                            color="secondary"
                            nav={true}
                          >
                            <a
                              aria-expanded={false}
                              aria-haspopup={true}
                              className="dropdown-toggle nav-link"
                              href="#"
                              onClick={[Function]}
                            >
                              Login
                            </a>
                          </DropdownToggle>
                          <DropdownMenu
                            flip={true}
                            right={true}
                            tag="div"
                          >
                            <div
                              aria-hidden={true}
                              className="dropdown-menu dropdown-menu-right"
                              role="menu"
                              tabIndex="-1"
                            >
                              <DropdownItem
                                header={true}
                                tag="button"
                                toggle={true}
                              >
                                <h6
                                  className="dropdown-header"
                                  onClick={[Function]}
                                  tabIndex="-1"
                                >
                                  <ReactSwitch
                                    activeBoxShadow="0 0 2px 3px #3bf"
                                    boxShadow={null}
                                    checked={false}
                                    checkedIcon={
                                      <svg
                                        height="100%"
                                        style={
                                          Object {
                                            "position": "absolute",
                                            "top": 0,
                                          }
                                        }
                                        viewBox="-2 -5 17 21"
                                        width="100%"
                                      >
                                        <path
                                          d="M11.264 0L5.26 6.004 2.103 2.847 0 4.95l5.26 5.26 8.108-8.107L11.264 0"
                                          fill="#fff"
                                          fillRule="evenodd"
                                        />
                                      </svg>
                                    }
                                    className="react-switch"
                                    disabled={false}
                                    height={20}
                                    offColor="#888"
                                    offHandleColor="#fff"
                                    onChange={[Function]}
                                    onColor="#28a745"
                                    onHandleColor="#fff"
                                    uncheckedIcon={
                                      <svg
                                        height="100%"
                                        style={
                                          Object {
                                            "position": "absolute",
                                            "top": 0,
                                          }
                                        }
                                        viewBox="-2 -5 14 20"
                                        width="100%"
                                      >
                                        <path
                                          d="M9.9 2.12L7.78 0 4.95 2.828 2.12 0 0 2.12l2.83 2.83L0 7.776 2.123 9.9 4.95 7.07 7.78 9.9 9.9 7.776 7.072 4.95 9.9 2.12"
                                          fill="#fff"
                                          fillRule="evenodd"
                                        />
                                      </svg>
                                    }
                                    width={40}
                                  >
                                    <div
                                      className="react-switch"
                                      style={
                                        Object {
                                          "MozTransition": "opacity 0.25s",
                                          "MozUserSelect": "none",
                                          "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
                                          "WebkitTransition": "opacity 0.25s",
                                          "WebkitUserSelect": "none",
                                          "borderRadius": 10,
                                          "direction": "ltr",
                                          "display": "inline-block",
                                          "msUserSelect": "none",
                                          "opacity": 1,
                                          "position": "relative",
                                          "textAlign": "left",
                                          "touchAction": "none",
                                          "transition": "opacity 0.25s",
                                          "userSelect": "none",
                                        }
                                      }
                                    >
                                      <div
                                        className="react-switch-bg"
                                        onClick={[Function]}
                                        onMouseDown={[Function]}
                                        style={
                                          Object {
                                            "MozTransition": "background 0.25s",
                                            "WebkitTransition": "background 0.25s",
                                            "background": "#888888",
                                            "borderRadius": 10,
                                            "cursor": "pointer",
                                            "height": 20,
                                            "margin": 0,
                                            "position": "relative",
                                            "transition": "background 0.25s",
                                            "width": 40,
                                          }
                                        }
                                      >
                                        <div
                                          style={
                                            Object {
                                              "MozTransition": "opacity 0.25s",
                                              "WebkitTransition": "opacity 0.25s",
                                              "height": 20,
                                              "opacity": 0,
                                              "pointerEvents": "none",
                                              "position": "relative",
                                              "transition": "opacity 0.25s",
                                              "width": 22,
                                            }
                                          }
                                        >
                                          <svg
                                            height="100%"
                                            style={
                                              Object {
                                                "position": "absolute",
                                                "top": 0,
                                              }
                                            }
                                            viewBox="-2 -5 17 21"
                                            width="100%"
                                          >
                                            <path
                                              d="M11.264 0L5.26 6.004 2.103 2.847 0 4.95l5.26 5.26 8.108-8.107L11.264 0"
                                              fill="#fff"
                                              fillRule="evenodd"
                                            />
                                          </svg>
                                        </div>
                                        <div
                                          style={
                                            Object {
                                              "MozTransition": "opacity 0.25s",
                                              "WebkitTransition": "opacity 0.25s",
                                              "height": 20,
                                              "opacity": 1,
                                              "pointerEvents": "none",
                                              "position": "absolute",
                                              "right": 0,
                                              "top": 0,
                                              "transition": "opacity 0.25s",
                                              "width": 22,
                                            }
                                          }
                                        >
                                          <svg
                                            height="100%"
                                            style={
                                              Object {
                                                "position": "absolute",
                                                "top": 0,
                                              }
                                            }
                                            viewBox="-2 -5 14 20"
                                            width="100%"
                                          >
                                            <path
                                              d="M9.9 2.12L7.78 0 4.95 2.828 2.12 0 0 2.12l2.83 2.83L0 7.776 2.123 9.9 4.95 7.07 7.78 9.9 9.9 7.776 7.072 4.95 9.9 2.12"
                                              fill="#fff"
                                              fillRule="evenodd"
                                            />
                                          </svg>
                                        </div>
                                      </div>
                                      <div
                                        className="react-switch-handle"
                                        onClick={[Function]}
                                        onMouseDown={[Function]}
                                        onTouchCancel={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        style={
                                          Object {
                                            "MozTransition": "background-color 0.25s, transform 0.25s, box-shadow 0.15s",
                                            "WebkitTransition": "background-color 0.25s, transform 0.25s, box-shadow 0.15s",
                                            "background": "#ffffff",
                                            "border": 0,
                                            "borderRadius": "50%",
                                            "boxShadow": null,
                                            "cursor": "pointer",
                                            "display": "inline-block",
                                            "height": 18,
                                            "outline": 0,
                                            "position": "absolute",
                                            "top": 1,
                                            "transform": "translateX(1px)",
                                            "transition": "background-color 0.25s, transform 0.25s, box-shadow 0.15s",
                                            "width": 18,
                                          }
                                        }
                                      />
                                      <input
                                        checked={false}
                                        disabled={false}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        onKeyUp={[Function]}
                                        role="switch"
                                        style={
                                          Object {
                                            "border": 0,
                                            "clip": "rect(0 0 0 0)",
                                            "height": 1,
                                            "margin": -1,
                                            "overflow": "hidden",
                                            "padding": 0,
                                            "position": "absolute",
                                            "width": 1,
                                          }
                                        }
                                        type="checkbox"
                                      />
                                    </div>
                                  </ReactSwitch>
                                   Offline mode
                                </h6>
                              </DropdownItem>
                              <DropDownConnectionStateItem>
                                <DropdownItem
                                  disabled={true}
                                  onClick={[MockFunction]}
                                  tag="button"
                                  toggle={true}
                                >
                                  <button
                                    className="disabled dropdown-item"
                                    disabled={true}
                                    onClick={[Function]}
                                    tabIndex="-1"
                                    type="button"
                                  >
                                    <ConnectionStateIcon
                                      isOnline={true}
                                      isSynced={true}
                                    >
                                      <FontAwesomeIcon
                                        border={false}
                                        className=""
                                        fixedWidth={false}
                                        flip={null}
                                        icon={
                                          Object {
                                            "icon": Array [
                                              384,
                                              512,
                                              Array [],
                                              "f1e6",
                                              "M256 144V32c0-17.673 14.327-32 32-32s32 14.327 32 32v112h-64zm112 16H16c-8.837 0-16 7.163-16 16v32c0 8.837 7.163 16 16 16h16v32c0 77.406 54.969 141.971 128 156.796V512h64v-99.204c73.031-14.825 128-79.39 128-156.796v-32h16c8.837 0 16-7.163 16-16v-32c0-8.837-7.163-16-16-16zm-240-16V32c0-17.673-14.327-32-32-32S64 14.327 64 32v112h64z",
                                            ],
                                            "iconName": "plug",
                                            "prefix": "fas",
                                          }
                                        }
                                        inverse={false}
                                        listItem={false}
                                        mask={null}
                                        pull={null}
                                        pulse={false}
                                        rotation={null}
                                        size={null}
                                        spin={false}
                                        swapOpacity={false}
                                        symbol={false}
                                        title=""
                                        transform={null}
                                      >
                                        <svg
                                          aria-hidden="true"
                                          className="svg-inline--fa fa-plug fa-w-12 "
                                          data-icon="plug"
                                          data-prefix="fas"
                                          focusable="false"
                                          role="img"
                                          style={Object {}}
                                          viewBox="0 0 384 512"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M256 144V32c0-17.673 14.327-32 32-32s32 14.327 32 32v112h-64zm112 16H16c-8.837 0-16 7.163-16 16v32c0 8.837 7.163 16 16 16h16v32c0 77.406 54.969 141.971 128 156.796V512h64v-99.204c73.031-14.825 128-79.39 128-156.796v-32h16c8.837 0 16-7.163 16-16v-32c0-8.837-7.163-16-16-16zm-240-16V32c0-17.673-14.327-32-32-32S64 14.327 64 32v112h64z"
                                            fill="currentColor"
                                            style={Object {}}
                                          />
                                        </svg>
                                      </FontAwesomeIcon>
                                    </ConnectionStateIcon>
                                     
                                    <Memo(ConnectionStateMessage)
                                      isOnline={true}
                                      isSynced={true}
                                    >
                                      <FormattedMessage
                                        defaultMessage="Online"
                                        id="online"
                                        values={Object {}}
                                      >
                                        Online
                                      </FormattedMessage>
                                    </Memo(ConnectionStateMessage)>
                                    (
                                    <NbActionPending>
                                      <FormattedMessage
                                        defaultMessage="{nbAction, plural, =0 {synced} one {# action to sync} other {# actions to sync}}"
                                        description="Nb action pending"
                                        id="nbAction"
                                        values={
                                          Object {
                                            "nbAction": 0,
                                          }
                                        }
                                      >
                                        synced
                                      </FormattedMessage>
                                    </NbActionPending>
                                    )
                                  </button>
                                </DropdownItem>
                              </DropDownConnectionStateItem>
                              <DropdownItem
                                divider={true}
                                tag="button"
                                toggle={true}
                              >
                                <div
                                  className="dropdown-divider"
                                  onClick={[Function]}
                                  tabIndex="-1"
                                />
                              </DropdownItem>
                              <DropdownItem
                                header={true}
                                tag="button"
                                toggle={true}
                              >
                                <h6
                                  className="dropdown-header"
                                  onClick={[Function]}
                                  tabIndex="-1"
                                >
                                  <Memo(ImageFolderGauge)
                                    storageSizeInMB={0}
                                    storageSizeLimitInMB={0}
                                  >
                                    <Progress
                                      color="danger"
                                      max={0}
                                      tag="div"
                                      value={0}
                                    >
                                      <div
                                        className="progress"
                                      >
                                        <div
                                          aria-valuemax={0}
                                          aria-valuemin="0"
                                          aria-valuenow={0}
                                          className="progress-bar bg-danger"
                                          role="progressbar"
                                          style={
                                            Object {
                                              "width": "NaN%",
                                            }
                                          }
                                        >
                                          0
                                           
                                          of
                                           
                                          0
                                          MB
                                        </div>
                                      </div>
                                    </Progress>
                                  </Memo(ImageFolderGauge)>
                                </h6>
                              </DropdownItem>
                              <DropdownItem
                                divider={true}
                                tag="button"
                                toggle={true}
                              >
                                <div
                                  className="dropdown-divider"
                                  onClick={[Function]}
                                  tabIndex="-1"
                                />
                              </DropdownItem>
                              <DropdownItem
                                onClick={[Function]}
                                tag="button"
                                toggle={true}
                              >
                                <button
                                  className="dropdown-item"
                                  onClick={[Function]}
                                  role="menuitem"
                                  tabIndex="0"
                                  type="button"
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className=""
                                    fixedWidth={false}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          512,
                                          512,
                                          Array [],
                                          "f2f5",
                                          "M497 273L329 441c-15 15-41 4.5-41-17v-96H152c-13.3 0-24-10.7-24-24v-96c0-13.3 10.7-24 24-24h136V88c0-21.4 25.9-32 41-17l168 168c9.3 9.4 9.3 24.6 0 34zM192 436v-40c0-6.6-5.4-12-12-12H96c-17.7 0-32-14.3-32-32V160c0-17.7 14.3-32 32-32h84c6.6 0 12-5.4 12-12V76c0-6.6-5.4-12-12-12H96c-53 0-96 43-96 96v192c0 53 43 96 96 96h84c6.6 0 12-5.4 12-12z",
                                        ],
                                        "iconName": "sign-out-alt",
                                        "prefix": "fas",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    swapOpacity={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-sign-out-alt fa-w-16 "
                                      data-icon="sign-out-alt"
                                      data-prefix="fas"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 512 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M497 273L329 441c-15 15-41 4.5-41-17v-96H152c-13.3 0-24-10.7-24-24v-96c0-13.3 10.7-24 24-24h136V88c0-21.4 25.9-32 41-17l168 168c9.3 9.4 9.3 24.6 0 34zM192 436v-40c0-6.6-5.4-12-12-12H96c-17.7 0-32-14.3-32-32V160c0-17.7 14.3-32 32-32h84c6.6 0 12-5.4 12-12V76c0-6.6-5.4-12-12-12H96c-53 0-96 43-96 96v192c0 53 43 96 96 96h84c6.6 0 12-5.4 12-12z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                   
                                  <FormattedMessage
                                    defaultMessage="Signout"
                                    description="Menu"
                                    id="signout"
                                    values={Object {}}
                                  >
                                    Signout
                                  </FormattedMessage>
                                </button>
                              </DropdownItem>
                              <DropdownItem
                                divider={true}
                                tag="button"
                                toggle={true}
                              >
                                <div
                                  className="dropdown-divider"
                                  onClick={[Function]}
                                  tabIndex="-1"
                                />
                              </DropdownItem>
                              <DropdownItem
                                onClick={[Function]}
                                tag="button"
                                toggle={true}
                              >
                                <button
                                  className="dropdown-item"
                                  onClick={[Function]}
                                  role="menuitem"
                                  tabIndex="0"
                                  type="button"
                                >
                                  <FormattedMessage
                                    defaultMessage="About"
                                    id="about"
                                    values={Object {}}
                                  >
                                    About
                                  </FormattedMessage>
                                </button>
                              </DropdownItem>
                            </div>
                          </DropdownMenu>
                        </li>
                      </Manager>
                    </Dropdown>
                  </UncontrolledDropdown>
                </ul>
              </Nav>
            </div>
          </Transition>
        </Collapse>
      </nav>
    </Navbar>
  </Memo(NavBar)>
</IntlProvider>
`;
