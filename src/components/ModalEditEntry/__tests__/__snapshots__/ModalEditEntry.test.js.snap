// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ModalEditEntry should render 3 buttons (cancel/save/delete) when we edit an existing entry 1`] = `
<ModalEditEntry
  deleteEntry={[MockFunction]}
  entry={
    Object {
      "_uiId": "an_entry_id",
      "ack": true,
      "age": 400,
      "date": 2019-10-24T16:00:00.000Z,
      "equipmentUiId": "an id generated by the front",
      "name": "vidange",
      "remarks": "oil was clean",
      "taskUiId": "an_id_created_by_the_front_end_and_for_the_front_end",
    }
  }
  equipment={
    Object {
      "_uiId": "an id generated by the front",
      "age": 2563,
      "ageAcquisitionType": 1,
      "ageUrl": "",
      "brand": "Nanni",
      "installation": 2019-07-09T16:00:00.000Z,
      "model": "N3.30",
      "name": "engine",
    }
  }
  saveEntry={[MockFunction]}
  task={
    Object {
      "_uiId": "an_id_created_by_the_front_end_and_for_the_front_end",
      "description": "Changer l'huile",
      "level": 0,
      "name": "Vidange",
      "nextDueDate": 2020-07-09T16:00:00.000Z,
      "periodInMonth": 12,
      "usageInHourLeft": undefined,
      "usagePeriodInHour": 500,
    }
  }
  toggle={[MockFunction]}
  visible={true}
>
  <Modal
    autoFocus={true}
    backdrop={true}
    backdropTransition={
      Object {
        "mountOnEnter": true,
        "timeout": 150,
      }
    }
    centered={false}
    fade={true}
    isOpen={true}
    keyboard={true}
    modalTransition={
      Object {
        "timeout": 300,
      }
    }
    onClosed={[Function]}
    onOpened={[Function]}
    returnFocusAfterClose={true}
    role="dialog"
    scrollable={false}
    toggle={[Function]}
    unmountOnClose={true}
    zIndex={1050}
  >
    <Portal
      node={
        <div
          style="position: relative; z-index: 1050; display: block;"
          tabindex="-1"
        >
          <div
            class=""
          >
            <div
              class="modal fade"
              role="dialog"
              style="display: block;"
              tabindex="-1"
            >
              <div
                class="modal-dialog"
                role="document"
              >
                <div
                  class="modal-content"
                >
                  <div
                    class="modal-header"
                  >
                    <h5
                      class="modal-title"
                    >
                      <svg
                        aria-hidden="true"
                        class="svg-inline--fa fa-check-square fa-w-14 fa-lg "
                        data-icon="check-square"
                        data-prefix="fas"
                        focusable="false"
                        role="img"
                        viewBox="0 0 448 512"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M400 480H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h352c26.51 0 48 21.49 48 48v352c0 26.51-21.49 48-48 48zm-204.686-98.059l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.248-16.379-6.249-22.628 0L184 302.745l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.25 16.379 6.25 22.628.001z"
                          fill="currentColor"
                        />
                      </svg>
                       
                      Entry edition
                    </h5>
                    <button
                      aria-label="Close"
                      class="close"
                      type="button"
                    >
                      <span
                        aria-hidden="true"
                      >
                        Ã—
                      </span>
                    </button>
                  </div>
                  <div
                    class="modal-body"
                  >
                    <form
                      class=""
                      id="editEntryForm"
                      novalidate=""
                    >
                      <div
                        class="form-group form-check form-check-inline"
                      >
                        <label
                          class="form-check-label"
                        >
                          Acknowledge the task
                           
                          <input
                            checked=""
                            class="form-check-input"
                            name="ack"
                            type="checkbox"
                            value=""
                          />
                        </label>
                      </div>
                      <div
                        class="form-group form-group"
                      >
                        <label
                          class=""
                          for="name"
                        >
                          Name
                        </label>
                        <input
                          class="form-control form-control"
                          name="name"
                          required=""
                          type="text"
                          value="vidange"
                        />
                      </div>
                      <div
                        class="form-group form-group"
                      >
                        <label
                          class=""
                          for="date"
                        >
                          Date
                        </label>
                        <input
                          class="form-control form-control"
                          name="date"
                          required=""
                          type="date"
                          value="2019-10-24"
                        />
                      </div>
                      <div
                        class="form-group form-group"
                      >
                        <label
                          class=""
                          for="age"
                        >
                          Equipment Age
                        </label>
                        <input
                          class="form-control form-control"
                          min="0"
                          name="age"
                          required=""
                          type="number"
                          value="400"
                        />
                      </div>
                      <div
                        class="form-group form-group"
                      >
                        <label
                          class=""
                          for="remarks"
                        >
                          Remarks
                        </label>
                        <textarea
                          class="form-control form-control"
                          name="remarks"
                          required=""
                        >
                          oil was clean
                        </textarea>
                      </div>
                    </form>
                    <div
                      class="flex-row top-padding-4px"
                    >
                      <label
                        class="font-weight-bold"
                      >
                        Gallery
                      </label>
                      <div>
                        <button
                          aria-label="Edit"
                          class="float-right btn btn-light"
                          type="button"
                        >
                          <span
                            class="fa-layers fa-fw"
                          >
                            <svg
                              aria-hidden="true"
                              class="svg-inline--fa fa-image fa-w-16 fa-lg "
                              data-icon="image"
                              data-prefix="fas"
                              focusable="false"
                              role="img"
                              viewBox="0 0 512 512"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M464 448H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h416c26.51 0 48 21.49 48 48v288c0 26.51-21.49 48-48 48zM112 120c-30.928 0-56 25.072-56 56s25.072 56 56 56 56-25.072 56-56-25.072-56-56-56zM64 384h384V272l-87.515-87.515c-4.686-4.686-12.284-4.686-16.971 0L208 320l-55.515-55.515c-4.686-4.686-12.284-4.686-16.971 0L64 336v48z"
                                fill="currentColor"
                              />
                            </svg>
                            <svg
                              aria-hidden="true"
                              class="svg-inline--fa fa-plus fa-w-14 fa-xs "
                              data-icon="plus"
                              data-prefix="fas"
                              focusable="false"
                              role="img"
                              style="transform-origin: -0.5625em 1.3125em;"
                              viewBox="0 0 448 512"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <g
                                transform="translate(224 256)"
                              >
                                <g
                                  transform="translate(-512, 416)  scale(1, 1)  rotate(0 0 0)"
                                >
                                  <path
                                    d="M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z"
                                    fill="currentColor"
                                    transform="translate(-224 -256)"
                                  />
                                </g>
                              </g>
                            </svg>
                          </span>
                        </button>
                      </div>
                    </div>
                    <div
                      class="p-1 border border-secondary rounded shadow gallery"
                    >
                      <div
                        class="lds-spinner"
                      >
                        <div />
                        <div />
                        <div />
                        <div />
                        <div />
                        <div />
                        <div />
                        <div />
                        <div />
                        <div />
                        <div />
                        <div />
                      </div>
                    </div>
                  </div>
                  <div
                    class="modal-footer"
                  >
                    <button
                      class="btn btn-success"
                      form="editEntryForm"
                      type="submit"
                    >
                      Save
                    </button>
                    <button
                      class="btn btn-secondary"
                      type="button"
                    >
                      Cancel
                    </button>
                    <button
                      class="btn btn-danger"
                      type="button"
                    >
                      Delete
                    </button>
                  </div>
                </div>
              </div>
            </div>
            <div
              class="modal-backdrop fade"
            />
          </div>
        </div>
      }
    >
      <Portal
        containerInfo={
          <div
            style="position: relative; z-index: 1050; display: block;"
            tabindex="-1"
          >
            <div
              class=""
            >
              <div
                class="modal fade"
                role="dialog"
                style="display: block;"
                tabindex="-1"
              >
                <div
                  class="modal-dialog"
                  role="document"
                >
                  <div
                    class="modal-content"
                  >
                    <div
                      class="modal-header"
                    >
                      <h5
                        class="modal-title"
                      >
                        <svg
                          aria-hidden="true"
                          class="svg-inline--fa fa-check-square fa-w-14 fa-lg "
                          data-icon="check-square"
                          data-prefix="fas"
                          focusable="false"
                          role="img"
                          viewBox="0 0 448 512"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M400 480H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h352c26.51 0 48 21.49 48 48v352c0 26.51-21.49 48-48 48zm-204.686-98.059l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.248-16.379-6.249-22.628 0L184 302.745l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.25 16.379 6.25 22.628.001z"
                            fill="currentColor"
                          />
                        </svg>
                         
                        Entry edition
                      </h5>
                      <button
                        aria-label="Close"
                        class="close"
                        type="button"
                      >
                        <span
                          aria-hidden="true"
                        >
                          Ã—
                        </span>
                      </button>
                    </div>
                    <div
                      class="modal-body"
                    >
                      <form
                        class=""
                        id="editEntryForm"
                        novalidate=""
                      >
                        <div
                          class="form-group form-check form-check-inline"
                        >
                          <label
                            class="form-check-label"
                          >
                            Acknowledge the task
                             
                            <input
                              checked=""
                              class="form-check-input"
                              name="ack"
                              type="checkbox"
                              value=""
                            />
                          </label>
                        </div>
                        <div
                          class="form-group form-group"
                        >
                          <label
                            class=""
                            for="name"
                          >
                            Name
                          </label>
                          <input
                            class="form-control form-control"
                            name="name"
                            required=""
                            type="text"
                            value="vidange"
                          />
                        </div>
                        <div
                          class="form-group form-group"
                        >
                          <label
                            class=""
                            for="date"
                          >
                            Date
                          </label>
                          <input
                            class="form-control form-control"
                            name="date"
                            required=""
                            type="date"
                            value="2019-10-24"
                          />
                        </div>
                        <div
                          class="form-group form-group"
                        >
                          <label
                            class=""
                            for="age"
                          >
                            Equipment Age
                          </label>
                          <input
                            class="form-control form-control"
                            min="0"
                            name="age"
                            required=""
                            type="number"
                            value="400"
                          />
                        </div>
                        <div
                          class="form-group form-group"
                        >
                          <label
                            class=""
                            for="remarks"
                          >
                            Remarks
                          </label>
                          <textarea
                            class="form-control form-control"
                            name="remarks"
                            required=""
                          >
                            oil was clean
                          </textarea>
                        </div>
                      </form>
                      <div
                        class="flex-row top-padding-4px"
                      >
                        <label
                          class="font-weight-bold"
                        >
                          Gallery
                        </label>
                        <div>
                          <button
                            aria-label="Edit"
                            class="float-right btn btn-light"
                            type="button"
                          >
                            <span
                              class="fa-layers fa-fw"
                            >
                              <svg
                                aria-hidden="true"
                                class="svg-inline--fa fa-image fa-w-16 fa-lg "
                                data-icon="image"
                                data-prefix="fas"
                                focusable="false"
                                role="img"
                                viewBox="0 0 512 512"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M464 448H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h416c26.51 0 48 21.49 48 48v288c0 26.51-21.49 48-48 48zM112 120c-30.928 0-56 25.072-56 56s25.072 56 56 56 56-25.072 56-56-25.072-56-56-56zM64 384h384V272l-87.515-87.515c-4.686-4.686-12.284-4.686-16.971 0L208 320l-55.515-55.515c-4.686-4.686-12.284-4.686-16.971 0L64 336v48z"
                                  fill="currentColor"
                                />
                              </svg>
                              <svg
                                aria-hidden="true"
                                class="svg-inline--fa fa-plus fa-w-14 fa-xs "
                                data-icon="plus"
                                data-prefix="fas"
                                focusable="false"
                                role="img"
                                style="transform-origin: -0.5625em 1.3125em;"
                                viewBox="0 0 448 512"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <g
                                  transform="translate(224 256)"
                                >
                                  <g
                                    transform="translate(-512, 416)  scale(1, 1)  rotate(0 0 0)"
                                  >
                                    <path
                                      d="M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z"
                                      fill="currentColor"
                                      transform="translate(-224 -256)"
                                    />
                                  </g>
                                </g>
                              </svg>
                            </span>
                          </button>
                        </div>
                      </div>
                      <div
                        class="p-1 border border-secondary rounded shadow gallery"
                      >
                        <div
                          class="lds-spinner"
                        >
                          <div />
                          <div />
                          <div />
                          <div />
                          <div />
                          <div />
                          <div />
                          <div />
                          <div />
                          <div />
                          <div />
                          <div />
                        </div>
                      </div>
                    </div>
                    <div
                      class="modal-footer"
                    >
                      <button
                        class="btn btn-success"
                        form="editEntryForm"
                        type="submit"
                      >
                        Save
                      </button>
                      <button
                        class="btn btn-secondary"
                        type="button"
                      >
                        Cancel
                      </button>
                      <button
                        class="btn btn-danger"
                        type="button"
                      >
                        Delete
                      </button>
                    </div>
                  </div>
                </div>
              </div>
              <div
                class="modal-backdrop fade"
              />
            </div>
          </div>
        }
      >
        <div
          className=""
        >
          <Fade
            appear={true}
            baseClass="fade"
            baseClassActive="show"
            className="modal"
            enter={true}
            exit={true}
            in={true}
            mountOnEnter={false}
            onClick={[Function]}
            onEnter={[Function]}
            onEntered={[Function]}
            onEntering={[Function]}
            onExit={[Function]}
            onExited={[Function]}
            onExiting={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            role="dialog"
            style={
              Object {
                "display": "block",
              }
            }
            tabIndex="-1"
            tag="div"
            timeout={300}
            unmountOnExit={false}
          >
            <Transition
              appear={true}
              enter={true}
              exit={true}
              in={true}
              mountOnEnter={false}
              onEnter={[Function]}
              onEntered={[Function]}
              onEntering={[Function]}
              onExit={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
              timeout={300}
              unmountOnExit={false}
            >
              <div
                className="modal fade"
                onClick={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                role="dialog"
                style={
                  Object {
                    "display": "block",
                  }
                }
                tabIndex="-1"
              >
                <div
                  className="modal-dialog"
                  role="document"
                >
                  <div
                    className="modal-content"
                  >
                    <ModalHeader
                      charCode={215}
                      closeAriaLabel="Close"
                      tag="h5"
                      toggle={[Function]}
                      wrapTag="div"
                    >
                      <div
                        className="modal-header"
                      >
                        <h5
                          className="modal-title"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon={
                              Object {
                                "icon": Array [
                                  448,
                                  512,
                                  Array [],
                                  "f14a",
                                  "M400 480H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h352c26.51 0 48 21.49 48 48v352c0 26.51-21.49 48-48 48zm-204.686-98.059l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.248-16.379-6.249-22.628 0L184 302.745l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.25 16.379 6.25 22.628.001z",
                                ],
                                "iconName": "check-square",
                                "prefix": "fas",
                              }
                            }
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size="lg"
                            spin={false}
                            swapOpacity={false}
                            symbol={false}
                            title=""
                            transform={null}
                          >
                            <svg
                              aria-hidden="true"
                              className="svg-inline--fa fa-check-square fa-w-14 fa-lg "
                              data-icon="check-square"
                              data-prefix="fas"
                              focusable="false"
                              role="img"
                              style={Object {}}
                              viewBox="0 0 448 512"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M400 480H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h352c26.51 0 48 21.49 48 48v352c0 26.51-21.49 48-48 48zm-204.686-98.059l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.248-16.379-6.249-22.628 0L184 302.745l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.25 16.379 6.25 22.628.001z"
                                fill="currentColor"
                                style={Object {}}
                              />
                            </svg>
                          </FontAwesomeIcon>
                           
                          <ModalTitle
                            isNewEntry={false}
                          >
                            <FormattedMessage
                              defaultMessage="Entry edition"
                              description="Panel title"
                              id="modalEditEntryTitle"
                              values={Object {}}
                            >
                              Entry edition
                            </FormattedMessage>
                          </ModalTitle>
                        </h5>
                        <button
                          aria-label="Close"
                          className="close"
                          onClick={[Function]}
                          type="button"
                        >
                          <span
                            aria-hidden="true"
                          >
                            Ã—
                          </span>
                        </button>
                      </div>
                    </ModalHeader>
                    <ModalBody
                      tag="div"
                    >
                      <div
                        className="modal-body"
                      >
                        <Memo(MyForm)
                          id="editEntryForm"
                          initialData={
                            Object {
                              "_uiId": "an_entry_id",
                              "ack": true,
                              "age": 400,
                              "date": 2019-10-24T16:00:00.000Z,
                              "equipmentUiId": "an id generated by the front",
                              "name": "vidange",
                              "remarks": "oil was clean",
                              "taskUiId": "an_id_created_by_the_front_end_and_for_the_front_end",
                            }
                          }
                          submit={[Function]}
                        >
                          <Form
                            id="editEntryForm"
                            innerRef={
                              Object {
                                "current": <form
                                  class=""
                                  id="editEntryForm"
                                  novalidate=""
                                >
                                  <div
                                    class="form-group form-check form-check-inline"
                                  >
                                    <label
                                      class="form-check-label"
                                    >
                                      Acknowledge the task
                                       
                                      <input
                                        checked=""
                                        class="form-check-input"
                                        name="ack"
                                        type="checkbox"
                                        value=""
                                      />
                                    </label>
                                  </div>
                                  <div
                                    class="form-group form-group"
                                  >
                                    <label
                                      class=""
                                      for="name"
                                    >
                                      Name
                                    </label>
                                    <input
                                      class="form-control form-control"
                                      name="name"
                                      required=""
                                      type="text"
                                      value="vidange"
                                    />
                                  </div>
                                  <div
                                    class="form-group form-group"
                                  >
                                    <label
                                      class=""
                                      for="date"
                                    >
                                      Date
                                    </label>
                                    <input
                                      class="form-control form-control"
                                      name="date"
                                      required=""
                                      type="date"
                                      value="2019-10-24"
                                    />
                                  </div>
                                  <div
                                    class="form-group form-group"
                                  >
                                    <label
                                      class=""
                                      for="age"
                                    >
                                      Equipment Age
                                    </label>
                                    <input
                                      class="form-control form-control"
                                      min="0"
                                      name="age"
                                      required=""
                                      type="number"
                                      value="400"
                                    />
                                  </div>
                                  <div
                                    class="form-group form-group"
                                  >
                                    <label
                                      class=""
                                      for="remarks"
                                    >
                                      Remarks
                                    </label>
                                    <textarea
                                      class="form-control form-control"
                                      name="remarks"
                                      required=""
                                    >
                                      oil was clean
                                    </textarea>
                                  </div>
                                </form>,
                              }
                            }
                            noValidate={true}
                            onSubmit={[Function]}
                            tag="form"
                          >
                            <form
                              className=""
                              id="editEntryForm"
                              noValidate={true}
                              onSubmit={[Function]}
                            >
                              <Memo()
                                checked={true}
                                handleChange={[Function]}
                                key=".0"
                                label={
                                  Object {
                                    "defaultMessage": "Acknowledge the task",
                                    "description": "Checkbox label",
                                    "id": "ackOption",
                                  }
                                }
                                name="ack"
                                type="checkbox"
                                validationTrigger={0}
                              >
                                <FormGroup
                                  check={true}
                                  className="form-group"
                                  inline={true}
                                  tag="div"
                                >
                                  <div
                                    className="form-group form-check form-check-inline"
                                  >
                                    <Label
                                      check={true}
                                      tag="label"
                                      widths={
                                        Array [
                                          "xs",
                                          "sm",
                                          "md",
                                          "lg",
                                          "xl",
                                        ]
                                      }
                                    >
                                      <label
                                        className="form-check-label"
                                      >
                                        <FormattedMessage
                                          defaultMessage="Acknowledge the task"
                                          description="Checkbox label"
                                          id="ackOption"
                                          values={Object {}}
                                        >
                                          Acknowledge the task
                                        </FormattedMessage>
                                         
                                        <Input
                                          checked={true}
                                          innerRef={
                                            Object {
                                              "current": <input
                                                checked=""
                                                class="form-check-input"
                                                name="ack"
                                                type="checkbox"
                                                value=""
                                              />,
                                            }
                                          }
                                          invalid={false}
                                          name="ack"
                                          onChange={[Function]}
                                          type="checkbox"
                                        >
                                          <input
                                            checked={true}
                                            className="form-check-input"
                                            name="ack"
                                            onChange={[Function]}
                                            type="checkbox"
                                          />
                                        </Input>
                                      </label>
                                    </Label>
                                  </div>
                                </FormGroup>
                              </Memo()>
                              <Memo()
                                handleChange={[Function]}
                                key=".1"
                                label={
                                  Object {
                                    "defaultMessage": "Name",
                                    "description": "Label",
                                    "id": "entryname",
                                  }
                                }
                                name="name"
                                required={true}
                                type="text"
                                validationTrigger={0}
                                value="vidange"
                              >
                                <FormGroup
                                  className="form-group"
                                  tag="div"
                                >
                                  <div
                                    className="form-group form-group"
                                  >
                                    <Label
                                      for="name"
                                      tag="label"
                                      widths={
                                        Array [
                                          "xs",
                                          "sm",
                                          "md",
                                          "lg",
                                          "xl",
                                        ]
                                      }
                                    >
                                      <label
                                        className=""
                                        htmlFor="name"
                                      >
                                        <FormattedMessage
                                          defaultMessage="Name"
                                          description="Label"
                                          id="entryname"
                                          values={Object {}}
                                        >
                                          Name
                                        </FormattedMessage>
                                      </label>
                                    </Label>
                                    <Input
                                      className="form-control"
                                      innerRef={
                                        Object {
                                          "current": <input
                                            class="form-control form-control"
                                            name="name"
                                            required=""
                                            type="text"
                                            value="vidange"
                                          />,
                                        }
                                      }
                                      invalid={false}
                                      name="name"
                                      onChange={[Function]}
                                      required={true}
                                      type="text"
                                      value="vidange"
                                    >
                                      <input
                                        className="form-control form-control"
                                        name="name"
                                        onChange={[Function]}
                                        required={true}
                                        type="text"
                                        value="vidange"
                                      />
                                    </Input>
                                  </div>
                                </FormGroup>
                              </Memo()>
                              <Memo()
                                handleChange={[Function]}
                                key=".2"
                                label={
                                  Object {
                                    "defaultMessage": "Date",
                                    "description": "Label",
                                    "id": "date",
                                  }
                                }
                                name="date"
                                required={true}
                                type="date"
                                validationTrigger={0}
                                value="2019-10-24"
                              >
                                <FormGroup
                                  className="form-group"
                                  tag="div"
                                >
                                  <div
                                    className="form-group form-group"
                                  >
                                    <Label
                                      for="date"
                                      tag="label"
                                      widths={
                                        Array [
                                          "xs",
                                          "sm",
                                          "md",
                                          "lg",
                                          "xl",
                                        ]
                                      }
                                    >
                                      <label
                                        className=""
                                        htmlFor="date"
                                      >
                                        <FormattedMessage
                                          defaultMessage="Date"
                                          description="Label"
                                          id="date"
                                          values={Object {}}
                                        >
                                          Date
                                        </FormattedMessage>
                                      </label>
                                    </Label>
                                    <Input
                                      className="form-control"
                                      innerRef={
                                        Object {
                                          "current": <input
                                            class="form-control form-control"
                                            name="date"
                                            required=""
                                            type="date"
                                            value="2019-10-24"
                                          />,
                                        }
                                      }
                                      invalid={false}
                                      name="date"
                                      onChange={[Function]}
                                      required={true}
                                      type="date"
                                      value="2019-10-24"
                                    >
                                      <input
                                        className="form-control form-control"
                                        name="date"
                                        onChange={[Function]}
                                        required={true}
                                        type="date"
                                        value="2019-10-24"
                                      />
                                    </Input>
                                  </div>
                                </FormGroup>
                              </Memo()>
                              <Memo()
                                handleChange={[Function]}
                                key=".3"
                                label={
                                  Object {
                                    "defaultMessage": "Equipment Age",
                                    "description": "Label",
                                    "id": "age",
                                  }
                                }
                                min={0}
                                name="age"
                                required={true}
                                type="number"
                                validationTrigger={0}
                                value="400"
                              >
                                <FormGroup
                                  className="form-group"
                                  tag="div"
                                >
                                  <div
                                    className="form-group form-group"
                                  >
                                    <Label
                                      for="age"
                                      tag="label"
                                      widths={
                                        Array [
                                          "xs",
                                          "sm",
                                          "md",
                                          "lg",
                                          "xl",
                                        ]
                                      }
                                    >
                                      <label
                                        className=""
                                        htmlFor="age"
                                      >
                                        <FormattedMessage
                                          defaultMessage="Equipment Age"
                                          description="Label"
                                          id="age"
                                          values={Object {}}
                                        >
                                          Equipment Age
                                        </FormattedMessage>
                                      </label>
                                    </Label>
                                    <Input
                                      className="form-control"
                                      innerRef={
                                        Object {
                                          "current": <input
                                            class="form-control form-control"
                                            min="0"
                                            name="age"
                                            required=""
                                            type="number"
                                            value="400"
                                          />,
                                        }
                                      }
                                      invalid={false}
                                      min={0}
                                      name="age"
                                      onChange={[Function]}
                                      required={true}
                                      type="number"
                                      value="400"
                                    >
                                      <input
                                        className="form-control form-control"
                                        min={0}
                                        name="age"
                                        onChange={[Function]}
                                        required={true}
                                        type="number"
                                        value="400"
                                      />
                                    </Input>
                                  </div>
                                </FormGroup>
                              </Memo()>
                              <Memo()
                                handleChange={[Function]}
                                key=".4"
                                label={
                                  Object {
                                    "defaultMessage": "Remarks",
                                    "description": "Label",
                                    "id": "remarks",
                                  }
                                }
                                name="remarks"
                                required={true}
                                type="textarea"
                                validationTrigger={0}
                                value="oil was clean"
                              >
                                <FormGroup
                                  className="form-group"
                                  tag="div"
                                >
                                  <div
                                    className="form-group form-group"
                                  >
                                    <Label
                                      for="remarks"
                                      tag="label"
                                      widths={
                                        Array [
                                          "xs",
                                          "sm",
                                          "md",
                                          "lg",
                                          "xl",
                                        ]
                                      }
                                    >
                                      <label
                                        className=""
                                        htmlFor="remarks"
                                      >
                                        <FormattedMessage
                                          defaultMessage="Remarks"
                                          description="Label"
                                          id="remarks"
                                          values={Object {}}
                                        >
                                          Remarks
                                        </FormattedMessage>
                                      </label>
                                    </Label>
                                    <Input
                                      className="form-control"
                                      innerRef={
                                        Object {
                                          "current": <textarea
                                            class="form-control form-control"
                                            name="remarks"
                                            required=""
                                          >
                                            oil was clean
                                          </textarea>,
                                        }
                                      }
                                      invalid={false}
                                      name="remarks"
                                      onChange={[Function]}
                                      required={true}
                                      type="textarea"
                                      value="oil was clean"
                                    >
                                      <textarea
                                        className="form-control form-control"
                                        name="remarks"
                                        onChange={[Function]}
                                        required={true}
                                        value="oil was clean"
                                      />
                                    </Input>
                                  </div>
                                </FormGroup>
                              </Memo()>
                            </form>
                          </Form>
                        </Memo(MyForm)>
                        <Memo(Gallery)
                          parentUiId="an_entry_id"
                        >
                          <Memo(GalleryComponent)
                            addImage={[Function]}
                            images={Array []}
                            isLoading={true}
                            onClickThumbnail={[Function]}
                            parentUiId="an_entry_id"
                          >
                            <div
                              className="flex-row top-padding-4px"
                            >
                              <Label
                                className="font-weight-bold"
                                tag="label"
                                widths={
                                  Array [
                                    "xs",
                                    "sm",
                                    "md",
                                    "lg",
                                    "xl",
                                  ]
                                }
                              >
                                <label
                                  className="font-weight-bold"
                                >
                                  <FormattedMessage
                                    defaultMessage="Gallery"
                                    description="Gallery title"
                                    id="gallerytitle"
                                    values={Object {}}
                                  >
                                    Gallery
                                  </FormattedMessage>
                                </label>
                              </Label>
                              <div>
                                <Memo(AddImageFileButton)
                                  addImage={[Function]}
                                  className="float-right"
                                  parentUiId="an_entry_id"
                                >
                                  <Button
                                    aria-label="Edit"
                                    className="float-right"
                                    color="light"
                                    onClick={[Function]}
                                    tag="button"
                                  >
                                    <button
                                      aria-label="Edit"
                                      className="float-right btn btn-light"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <span
                                        className="fa-layers fa-fw"
                                      >
                                        <FontAwesomeIcon
                                          border={false}
                                          className=""
                                          fixedWidth={false}
                                          flip={null}
                                          icon={
                                            Object {
                                              "icon": Array [
                                                512,
                                                512,
                                                Array [],
                                                "f03e",
                                                "M464 448H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h416c26.51 0 48 21.49 48 48v288c0 26.51-21.49 48-48 48zM112 120c-30.928 0-56 25.072-56 56s25.072 56 56 56 56-25.072 56-56-25.072-56-56-56zM64 384h384V272l-87.515-87.515c-4.686-4.686-12.284-4.686-16.971 0L208 320l-55.515-55.515c-4.686-4.686-12.284-4.686-16.971 0L64 336v48z",
                                              ],
                                              "iconName": "image",
                                              "prefix": "fas",
                                            }
                                          }
                                          inverse={false}
                                          listItem={false}
                                          mask={null}
                                          pull={null}
                                          pulse={false}
                                          rotation={null}
                                          size="lg"
                                          spin={false}
                                          swapOpacity={false}
                                          symbol={false}
                                          title=""
                                          transform={null}
                                        >
                                          <svg
                                            aria-hidden="true"
                                            className="svg-inline--fa fa-image fa-w-16 fa-lg "
                                            data-icon="image"
                                            data-prefix="fas"
                                            focusable="false"
                                            role="img"
                                            style={Object {}}
                                            viewBox="0 0 512 512"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M464 448H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h416c26.51 0 48 21.49 48 48v288c0 26.51-21.49 48-48 48zM112 120c-30.928 0-56 25.072-56 56s25.072 56 56 56 56-25.072 56-56-25.072-56-56-56zM64 384h384V272l-87.515-87.515c-4.686-4.686-12.284-4.686-16.971 0L208 320l-55.515-55.515c-4.686-4.686-12.284-4.686-16.971 0L64 336v48z"
                                              fill="currentColor"
                                              style={Object {}}
                                            />
                                          </svg>
                                        </FontAwesomeIcon>
                                        <FontAwesomeIcon
                                          border={false}
                                          className=""
                                          fixedWidth={false}
                                          flip={null}
                                          icon={
                                            Object {
                                              "icon": Array [
                                                448,
                                                512,
                                                Array [],
                                                "f067",
                                                "M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z",
                                              ],
                                              "iconName": "plus",
                                              "prefix": "fas",
                                            }
                                          }
                                          inverse={false}
                                          listItem={false}
                                          mask={null}
                                          pull={null}
                                          pulse={false}
                                          rotation={null}
                                          size="xs"
                                          spin={false}
                                          swapOpacity={false}
                                          symbol={false}
                                          title=""
                                          transform="down-13 left-16"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            className="svg-inline--fa fa-plus fa-w-14 fa-xs "
                                            data-icon="plus"
                                            data-prefix="fas"
                                            focusable="false"
                                            role="img"
                                            style={
                                              Object {
                                                "transformOrigin": "-0.5625em 1.3125em",
                                              }
                                            }
                                            viewBox="0 0 448 512"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <g
                                              style={Object {}}
                                              transform="translate(224 256)"
                                            >
                                              <g
                                                style={Object {}}
                                                transform="translate(-512, 416)  scale(1, 1)  rotate(0 0 0)"
                                              >
                                                <path
                                                  d="M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z"
                                                  fill="currentColor"
                                                  style={Object {}}
                                                  transform="translate(-224 -256)"
                                                />
                                              </g>
                                            </g>
                                          </svg>
                                        </FontAwesomeIcon>
                                      </span>
                                    </button>
                                  </Button>
                                </Memo(AddImageFileButton)>
                              </div>
                            </div>
                            <div
                              className="p-1 border border-secondary rounded shadow gallery"
                            >
                              <Loading>
                                <div
                                  className="lds-spinner"
                                >
                                  <div />
                                  <div />
                                  <div />
                                  <div />
                                  <div />
                                  <div />
                                  <div />
                                  <div />
                                  <div />
                                  <div />
                                  <div />
                                  <div />
                                </div>
                              </Loading>
                            </div>
                          </Memo(GalleryComponent)>
                          <ModalEditImage
                            onImageDeleted={[Function]}
                            onImageSaved={[Function]}
                            toggle={[Function]}
                            visible={false}
                          >
                            <Modal
                              autoFocus={true}
                              backdrop={true}
                              backdropTransition={
                                Object {
                                  "mountOnEnter": true,
                                  "timeout": 150,
                                }
                              }
                              centered={false}
                              fade={true}
                              isOpen={false}
                              keyboard={true}
                              modalTransition={
                                Object {
                                  "timeout": 300,
                                }
                              }
                              onClosed={[Function]}
                              onOpened={[Function]}
                              returnFocusAfterClose={true}
                              role="dialog"
                              scrollable={false}
                              toggle={[Function]}
                              unmountOnClose={true}
                              zIndex={1050}
                            />
                            <ModalYesNoConfirmation
                              className="modal-dialog-centered"
                              isActing={false}
                              message={
                                Object {
                                  "defaultMessage": "Are you sure you want to delete this image?",
                                  "description": "confirmation message",
                                  "id": "imageDeleteMessage",
                                }
                              }
                              no={[Function]}
                              title={
                                Object {
                                  "defaultMessage": "Delete image",
                                  "description": "modal title",
                                  "id": "imageDeleteTitle",
                                }
                              }
                              toggle={[Function]}
                              visible={false}
                              yes={[Function]}
                            >
                              <Modal
                                autoFocus={true}
                                backdrop={true}
                                backdropTransition={
                                  Object {
                                    "mountOnEnter": true,
                                    "timeout": 150,
                                  }
                                }
                                centered={false}
                                className="modal-dialog-centered"
                                fade={true}
                                isOpen={false}
                                keyboard={true}
                                modalTransition={
                                  Object {
                                    "timeout": 300,
                                  }
                                }
                                onClosed={[Function]}
                                onOpened={[Function]}
                                returnFocusAfterClose={true}
                                role="dialog"
                                scrollable={false}
                                toggle={[Function]}
                                unmountOnClose={true}
                                zIndex={1050}
                              />
                            </ModalYesNoConfirmation>
                          </ModalEditImage>
                        </Memo(Gallery)>
                        <Alerts />
                      </div>
                    </ModalBody>
                    <ModalFooter
                      tag="div"
                    >
                      <div
                        className="modal-footer"
                      >
                        <ActionButton
                          color="success"
                          form="editEntryForm"
                          isActing={false}
                          message={
                            Object {
                              "defaultMessage": "Save",
                              "description": "Button",
                              "id": "save",
                            }
                          }
                          type="submit"
                        >
                          <Button
                            color="success"
                            form="editEntryForm"
                            tag="button"
                            type="submit"
                          >
                            <button
                              aria-label={null}
                              className="btn btn-success"
                              form="editEntryForm"
                              onClick={[Function]}
                              type="submit"
                            >
                              <FormattedMessage
                                defaultMessage="Save"
                                description="Button"
                                id="save"
                                values={Object {}}
                              >
                                Save
                              </FormattedMessage>
                            </button>
                          </Button>
                        </ActionButton>
                        <Button
                          color="secondary"
                          onClick={[Function]}
                          tag="button"
                        >
                          <button
                            aria-label={null}
                            className="btn btn-secondary"
                            onClick={[Function]}
                            type="button"
                          >
                            <FormattedMessage
                              defaultMessage="Cancel"
                              description="Button"
                              id="cancel"
                              values={Object {}}
                            >
                              Cancel
                            </FormattedMessage>
                          </button>
                        </Button>
                        <Button
                          color="danger"
                          onClick={[Function]}
                          tag="button"
                        >
                          <button
                            aria-label={null}
                            className="btn btn-danger"
                            onClick={[Function]}
                            type="button"
                          >
                            <FormattedMessage
                              defaultMessage="Delete"
                              description="Button"
                              id="delete"
                              values={Object {}}
                            >
                              Delete
                            </FormattedMessage>
                          </button>
                        </Button>
                      </div>
                    </ModalFooter>
                  </div>
                </div>
              </div>
            </Transition>
          </Fade>
          <Fade
            appear={true}
            baseClass="fade"
            baseClassActive="show"
            className="modal-backdrop"
            enter={true}
            exit={true}
            in={true}
            mountOnEnter={true}
            onEnter={[Function]}
            onEntered={[Function]}
            onEntering={[Function]}
            onExit={[Function]}
            onExited={[Function]}
            onExiting={[Function]}
            tag="div"
            timeout={150}
            unmountOnExit={false}
          >
            <Transition
              appear={true}
              enter={true}
              exit={true}
              in={true}
              mountOnEnter={true}
              onEnter={[Function]}
              onEntered={[Function]}
              onEntering={[Function]}
              onExit={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
              timeout={150}
              unmountOnExit={false}
            >
              <div
                className="modal-backdrop fade"
              />
            </Transition>
          </Fade>
        </div>
      </Portal>
    </Portal>
  </Modal>
  <ModalYesNoConfirmation
    className="modal-dialog-centered"
    isActing={false}
    message={
      Object {
        "defaultMessage": "Are you sure you want to delete this entry?",
        "description": "User message",
        "id": "entryDeleteMsg",
      }
    }
    no={[Function]}
    title={
      Object {
        "defaultMessage": "Delete entry",
        "description": "Modal title",
        "id": "entryDeleteTitle",
      }
    }
    toggle={[Function]}
    visible={false}
    yes={[Function]}
  >
    <Modal
      autoFocus={true}
      backdrop={true}
      backdropTransition={
        Object {
          "mountOnEnter": true,
          "timeout": 150,
        }
      }
      centered={false}
      className="modal-dialog-centered"
      fade={true}
      isOpen={false}
      keyboard={true}
      modalTransition={
        Object {
          "timeout": 300,
        }
      }
      onClosed={[Function]}
      onOpened={[Function]}
      returnFocusAfterClose={true}
      role="dialog"
      scrollable={false}
      toggle={[Function]}
      unmountOnClose={true}
      zIndex={1050}
    />
  </ModalYesNoConfirmation>
</ModalEditEntry>
`;
